<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:mvc="http://www.springframework.org/schema/cache"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:property-placeholder
            location="
         classpath:application.properties" />

    <http request-matcher="regex" auto-config="true" use-expressions="true">
        <!-- web-страницы -->
        <intercept-url pattern="\/login.*" access="isAnonymous()"/>
        <intercept-url pattern="\/oauth2.*" access="permitAll()"/>
        <intercept-url pattern="\/resources\/.*" access="permitAll()"/>
        <intercept-url pattern=".*" access="isAuthenticated()"/>


        <!-- Rest-сервис -->

        <form-login
                authentication-success-handler-ref="authSuccessHandler"
                login-page="/login"

                authentication-failure-url="/login?login_error=1"
                username-parameter="login" password-parameter="password"
                authentication-success-forward-url="/"/>
        <logout/>
        <csrf disabled="true"/>
    </http>

    <beans:bean id="authSuccessHandler" class="com.company.service.AuthSuccessHandler"/>

    <beans:bean id="accountService" class="com.company.service.MultiloginAccountService">
        <beans:property name="accountDAO" ref="accountDAO"/>
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="accountService">
            <password-encoder hash="sha"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="verificationCodeGenerator" class="com.company.service.util.DigitCodeGenerator">
        <beans:property name="length" value="${security.verificationCode.length}"/>
    </beans:bean>

    <beans:bean id="facebookOAuth2Authenticator" class="com.company.service.auth.oauth2.OAuth2Authenticator">
        <beans:constructor-arg name="userAgent" value="${security.oauth2.userAgent}"/>
        <beans:constructor-arg name="appId" value="${security.oauth2.facebook.appId}"/>
        <beans:constructor-arg name="appSecret" value="#{systemEnvironment['FACEBOOK_SECRET']}"/>
        <beans:constructor-arg name="redirectUrl" value="${security.oauth2.facebook.redirectUrl}"/>
        <beans:constructor-arg name="getTokenUrl" value="${security.oauth2.facebook.getTokenUrl}"/>
        <beans:constructor-arg name="readDataUrl" value="${security.oauth2.facebook.readDataUrl}"/>
        <beans:constructor-arg name="restorer" ref="facebookOAuth2DataRestorer"/>
    </beans:bean>

    <beans:bean id="vkOAuth2Authenticator" class="com.company.service.auth.oauth2.OAuth2Authenticator">
        <beans:constructor-arg name="userAgent" value="${security.oauth2.userAgent}"/>
        <beans:constructor-arg name="appId" value="${security.oauth2.vk.appId}"/>
        <beans:constructor-arg name="appSecret" value="#{systemEnvironment['VK_SECRET']}"/>
        <beans:constructor-arg name="redirectUrl" value="${security.oauth2.vk.redirectUrl}"/>
        <beans:constructor-arg name="getTokenUrl" value="${security.oauth2.vk.getTokenUrl}"/>
        <beans:constructor-arg name="readDataUrl" value="${security.oauth2.vk.readDataUrl}"/>
        <beans:constructor-arg name="restorer" ref="vkOAuth2DataRestorer"/>
    </beans:bean>
</beans:beans>